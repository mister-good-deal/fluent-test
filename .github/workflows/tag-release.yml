name: Create GitHub Release

on:
  # Run when a new tag is pushed
  push:
    tags:
      - 'v*' # Run when any tag starting with 'v' is pushed

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # Required for creating releases
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for release notes
      
      - name: Extract version from tag
        id: get_version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          VERSION=${TAG_NAME#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          echo "Tag: $TAG_NAME, Version: $VERSION"
      
      - name: Extract release notes from CHANGELOG
        id: changelog
        run: |
          # Extract section for the current version
          VERSION="${{ steps.get_version.outputs.version }}"
          
          # Extract content between the current version header and the next header
          RELEASE_NOTES=$(awk -v ver="$VERSION" '
            BEGIN { capture=0; notes=""; }
            $0 ~ "^## " ver { capture=1; next; }
            $0 ~ /^## [0-9]+\.[0-9]+\.[0-9]+/ && capture { capture=0; }
            capture { notes = notes $0 "\n"; }
            END { print notes; }
          ' CHANGELOG.md)
          
          # If no specific release notes found, generate from commits
          if [ -z "$RELEASE_NOTES" ]; then
            echo "No specific release notes found in CHANGELOG.md for version $VERSION."
            echo "Falling back to auto-generated notes from commits."
            echo "use_generated_notes=true" >> $GITHUB_OUTPUT
          else
            # Save release notes to a temporary file to preserve formatting
            echo "$RELEASE_NOTES" > release_notes.md
            echo "use_generated_notes=false" >> $GITHUB_OUTPUT
            echo "Found release notes in CHANGELOG.md for version $VERSION"
          fi

      - name: Create GitHub Release with CHANGELOG notes
        if: steps.changelog.outputs.use_generated_notes != 'true'
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ steps.get_version.outputs.tag_name }}"
          tag_name: ${{ steps.get_version.outputs.tag_name }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          make_latest: true

      - name: Create GitHub Release with generated notes
        if: steps.changelog.outputs.use_generated_notes == 'true'
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ steps.get_version.outputs.tag_name }}"
          tag_name: ${{ steps.get_version.outputs.tag_name }}
          generate_release_notes: true
          draft: false
          prerelease: false
          make_latest: true